<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SignU</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            background-color: #c7c7c7;
        }

        .main {
            display: inline-flex;
            justify-content: center;
            flex-direction: column;
            align-items: center;
        }

        .color-field {
            height: 2rem;
            width: 2rem;
            min-height: 2rem;
            min-width: 2rem;
            cursor: pointer;
            border-radius: 50%;
            border: 1px solid white;
        }

        .tools {
            width: 50vw;
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-direction: row;
        }

        button.download {
            color: White;
            background-color: rgb(30, 170, 30);
            cursor: pointer;
            height: 2rem;
            border-radius: 0.3rem;
            border: 2px solid whitesmoke;
        }

        button.clear {
            color: White;
            background-color: rgb(161, 33, 33);
            cursor: pointer;
            height: 2rem;
            border-radius: 0.3rem;
            border: 2px solid whitesmoke;
        }

        .canvas {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-bottom: 2rem;
            box-shadow: -3px 2px 9px 6px #212121;
            cursor: pointer;
        }
    </style>
</head>

<body>
    <div class="main">
        <canvas class="canvas" id="canvas"></canvas>
        <div class="tools">
            <button onclick="download_image()" class="download" id="download">Download</button>
            <button onclick="clear_canvas()" class="clear" id="clear">Clear</button>
            <div onclick="draw_color = this.style.background" class="color-field" style="background: black;"></div>
            <input onInput="draw_color = this.value" type="color" class="color-picker" />
            <input onInput="draw_width = this.value" type="range" min="1" max="100" class="pen-range" value="2" />
        </div>
    </div>
    <script>
        const canvas = document.getElementById('canvas');
        canvas.width = window.innerWidth;
        canvas.height = 500;
        window.addEventListener('resize', () => {
            canvas.width = window.innerWidth;
            canvas.height = 500;
            ctx.fillStyle = start_background_color;
            ctx.fillRect(0, 0, canvas.width, canvas.height);
        })
        let ctx = canvas.getContext('2d');
        let start_background_color = "white";
        ctx.fillStyle = start_background_color;
        ctx.fillRect(0, 0, canvas.width, canvas.height);

        let draw_color = "black";
        let draw_width = "2";
        let is_drawing = false;



        canvas.addEventListener("touchstart", start, false);
        canvas.addEventListener("touchmove", draw, false);
        canvas.addEventListener("mousedown", start, false);
        canvas.addEventListener("mousemove", draw, false);

        canvas.addEventListener("touchend", stop, false);
        canvas.addEventListener("mouseout", stop, false);
        canvas.addEventListener("mouseup", stop, false);

        function download_image() {
            var image = canvas.toDataURL();
            var tmpLink = document.createElement('a');
            tmpLink.download = 'image.png';
            tmpLink.href = image;
            document.body.appendChild(tmpLink);
            tmpLink.click();
            document.body.removeChild(tmpLink);
        }
        function clear_canvas() {
            ctx.fillStyle = start_background_color;
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            ctx.fillRect(0, 0, canvas.width, canvas.height);
        }
        function start(e) {
            is_drawing = true;
            ctx.beginPath();
            ctx.moveTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);
            e.preventDefault();
        }
        function draw(e) {
            if (is_drawing) {
                ctx.lineTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);
                ctx.strokeStyle = draw_color;
                ctx.lineWidth = draw_width;
                ctx.lineCap = "round";
                ctx.lineJoin = "round";
                ctx.stroke();
            }
            e.preventDefault();
        }
        function stop(e) {
            if (is_drawing) {
                ctx.stroke();
                ctx.closePath();
                is_drawing = false;
            }
            e.preventDefault();
        }

    </script>
</body>

</html>
